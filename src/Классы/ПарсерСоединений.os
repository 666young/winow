Перем Поделка;
Перем Перечисления;
Перем Парсеры;
Перем Настройки;
Перем ШифрованиеТЛС;

&Желудь
Процедура ПриСозданииОбъекта(
							&Пластилин("Поделка") _Поделка,
							&Пластилин("Перечисления") _Перечисления,
							&Пластилин("Парсеры") _Парсеры,
							&Пластилин("Настройки") _Настройки,
							&Пластилин("ШифрованиеТЛС") _ШифрованиеТЛС
							)
	Поделка = _Поделка;
	Перечисления = _Перечисления;
	Парсеры = _Парсеры;
	Настройки = _Настройки;
	ШифрованиеТЛС = _ШифрованиеТЛС;
КонецПроцедуры

Функция ПолучитьЗапрос(Соединение) Экспорт
	
	Запрос = Поделка.НайтиЖелудь("ВходящийЗапрос");

	// Бывают странности с тем, что некоторые клиенты плохо шлют
	// пост тело, нужно подождать.
	Если Настройки.ЗадержкаПередЧтениемСокета > 0 Тогда
		Приостановить(Настройки.ЗадержкаПередЧтениемСокета);
	КонецЕсли;

	Если Настройки.ИспользоватьШифрование = Истина Тогда
		РезультатШифрования = ШифрованиеТЛС.Расшифровать(Соединение);
		Если РезультатШифрования.ЗапросОбработан = Истина Тогда
			Запрос.Обработан = Истина;
			Возврат Запрос;
		КонецЕсли;

		Запрос.Ключ = РезультатШифрования.Ключ;
		ДанныеЗапроса = РезультатШифрования.ДвоичныеДанные;
		
	Иначе
		ДанныеЗапроса = Соединение.ПрочитатьДвоичныеДанные();
	КонецЕсли;

	РазделенныйЗапрос = Парсеры.РазделитьДвоичныеДанныеРазделителем(ДанныеЗапроса, ПолучитьДвоичныеДанныеИзСтроки(Перечисления.Разделитель + Перечисления.Разделитель));

	ТекстЗапроса = ПолучитьСтрокуИзДвоичныхДанных(РазделенныйЗапрос.Лево, "utf-8");

	СтруктураЗапроса = РазобратьТексЗапроса(ТекстЗапроса);

	Запрос.ТекстЗапроса = ТекстЗапроса;
	Запрос.Соединение = Соединение;
	Запрос.ДвоичныеДанные = ДанныеЗапроса;
	Запрос.ТелоДвоичныеДанные = РазделенныйЗапрос.Право;
	Если Не Запрос.ТелоДвоичныеДанные = Неопределено Тогда
		Запрос.Тело = ПолучитьСтрокуИзДвоичныхДанных(Запрос.ТелоДвоичныеДанные);
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(Запрос, СтруктураЗапроса);

	Возврат Запрос;

КонецФункции

Функция РазобратьТексЗапроса(ТекстЗапроса)
	Результат = Новый Структура();

	МассивСтрок = СтрРазделить(ТекстЗапроса, Символы.ПС, Ложь);

	Если МассивСтрок.Количество() > 0 Тогда
		ПерваяСтрока = СтрРазделить(МассивСтрок[0], " ");
		Результат.Вставить("Метод", ПерваяСтрока[0]);
		Результат.Вставить("ПолныйПуть", РаскодироватьСтроку(ПерваяСтрока[1],СпособКодированияСтроки.КодировкаURL));
		
		ПутьИПараметры = Парсеры.РазделитьСтроку(Результат.ПолныйПуть, "?");

		Результат.Вставить("ПараметрыИменные", Парсеры.ПараметрыИзТекста(ПутьИПараметры.Право));
		Результат.Вставить("Путь", ПутьИПараметры.Лево);
		
		Заголовки = Новый Соответствие();
		Результат.Вставить("Заголовки", Заголовки);

		Результат.Вставить("Куки", Поделка.НайтиЖелудь("Куки"));

		Для Сч = 1 По МассивСтрок.ВГраница() Цикл
			ДанныеСтроки = РаспарситьСтрокуЗаголовка(МассивСтрок[Сч]);
			Если ДанныеСтроки.Имя = "Cookie" Тогда
				Для Каждого КукаСтрокой Из СтрРазделить(ДанныеСтроки.Значение, ";") Цикл
					Кука = Парсеры.РазделитьСтроку(КукаСтрокой, "=");
					Результат.Куки.Добавить(СокрЛП(Кука.Лево), СокрЛП(Кука.Право));
				КонецЦикла
			Иначе
				Заголовки.Вставить(ДанныеСтроки.Имя, ДанныеСтроки.Значение);
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

	Возврат Результат;
КонецФункции

Функция РаспарситьСтрокуЗаголовка(СтрокаЗаголовка)
	РазделеннаяСтрока = Парсеры.РазделитьСтроку(СтрокаЗаголовка, ":");
	Возврат Новый Структура("Имя, Значение", РазделеннаяСтрока.Лево, РазделеннаяСтрока.Право);
КонецФункции