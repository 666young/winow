Перем КодВыполнения;
Перем ЧастиШаблона;
Перем РамкиБлоков;

Перем ТекстШаблона Экспорт;
Перем Модель Экспорт;
&Пластилин
Перем Парсеры Экспорт;

&Желудь
&Характер("Компанейский")
Процедура ПриСозданииОбъекта()
	
	Парсеры = Новый Парсеры(Новый Настройки());
	
	РамкиБлоков = Новый Структура();
	РамкиБлоков.Вставить("НачалоВыражения", СтрРазделить("{;{", ";"));
	РамкиБлоков.Вставить("ОкончаниеВыражения", СтрРазделить("};}", ";"));
	РамкиБлоков.Вставить("НачалоОператора", СтрРазделить("{;%", ";"));
	РамкиБлоков.Вставить("ОкончаниеОператора", СтрРазделить("%;}", ";"));

КонецПроцедуры

Процедура ИнициализацияПеременных()

	КодВыполнения = Новый Массив();
	ЧастиШаблона = Новый Соответствие();
	
КонецПроцедуры

Функция СформироватьТекст() Экспорт

	ИнициализацияПеременных();
	
	БлокПоиска = Новый Массив(2);
	ТекущийПоток = Новый Массив;


	ИскомоеОкочание = Неопределено;

	Для Сч = 1 по СтрДлина(ТекстШаблона) Цикл
		ТекущийСимвол = Сред(ТекстШаблона, Сч, 1);
		Парсеры.ДобавитьВМассивСоСмещением(БлокПоиска, ТекущийСимвол);
		Если Парсеры.МассивыРавны(БлокПоиска, РамкиБлоков.НачалоВыражения) Тогда
			Ид = ДобавитьЧастьШаблона(ТекущийПоток);
			ТекущийПоток = Новый Массив;
			ИскомоеОкочание = РамкиБлоков.ОкончаниеВыражения;
			ЧастьКодаВставкаЧастиШаблона(Ид);
		ИначеЕсли Парсеры.МассивыРавны(БлокПоиска, РамкиБлоков.НачалоОператора) Тогда
			Ид = ДобавитьЧастьШаблона(ТекущийПоток);
			ТекущийПоток = Новый Массив;
			ИскомоеОкочание = РамкиБлоков.ОкончаниеОператора;
			ЧастьКодаВставкаЧастиШаблона(Ид);
		ИначеЕсли Не ИскомоеОкочание = Неопределено И Парсеры.МассивыРавны(БлокПоиска, ИскомоеОкочание) Тогда
			ЧастьКода = СтрокаИзМассива(ТекущийПоток);
			ТекущийПоток = Новый Массив;
			ДобавитьЧастьКодаОтОкочания(ЧастьКода, ИскомоеОкочание);
			ИскомоеОкочание = Неопределено;
		Иначе
			ТекущийПоток.Добавить(ТекущийСимвол);
		КонецЕсли;
	КонецЦикла;

	Если ТекущийПоток.Количество() > 0 Тогда
		ТекущийПоток.Добавить(" ");
		Ид = ДобавитьЧастьШаблона(ТекущийПоток);
		ЧастьКодаВставкаЧастиШаблона(Ид);
	КонецЕсли;

	Результат = Новый Массив;

	ЗаполнитьМассивКодом(Результат);

	Возврат СтрСоединить(Результат, "");

КонецФункции

Процедура ЗаполнитьМассивКодом(Результат)

	ВесьКод = СтрСоединить(КодВыполнения);
	Выполнить(ВесьКод);
	
КонецПроцедуры

Процедура ДобавитьЧастьКодаОтОкочания(ЧастьКода, Окончание)

	Если Окончание = РамкиБлоков.ОкончаниеВыражения Тогда
		КодКДобавлению = СтрШаблон("_Значение = Строка(%1);
									|Результат.Добавить(_Значение);", ЧастьКода);
		КодВыполнения.Добавить(КодКДобавлению + Символы.ПС);
	Иначе
		КодВыполнения.Добавить(ЧастьКода + Символы.ПС);
	КонецЕсли;

КонецПроцедуры

Процедура ЧастьКодаВставкаЧастиШаблона(Ид)

	Код = СтрШаблон("Результат.Добавить(ЧастиШаблона[""%1""]);", Ид);
	КодВыполнения.Добавить(Код + Символы.ПС);
	
КонецПроцедуры

Функция ДобавитьЧастьШаблона(МассивСимволов)

	Ид = Строка(Новый УникальныйИдентификатор());
	
	ЧастиШаблона.Вставить(Ид, СтрокаИзМассива(МассивСимволов));

	Возврат Ид;
	
КонецФункции

Функция СтрокаИзМассива(МассивСимволов)
	МассивСимволов.Удалить(МассивСимволов.ВГраница());
	Строка = СтрСоединить(МассивСимволов, "");
	Возврат Строка; 	
КонецФункции